import io.restassured.builder.RequestSpecBuilder;
import io.restassured.response.Response;
import io.restassured.specification.RequestSpecification;
import org.junit.Test;

import java.util.HashMap;
import java.util.Map;

import static io.restassured.RestAssured.given;
import static org.hamcrest.CoreMatchers.containsString;

/**
 * Created by ryanconklin on 10/28/16.
 */
public class CeterusApiTest{
    //private ApiUtil apiUtil;

    String targetVerify200 = "https://verify.ceterusinsight.com/login.php";
    String targetVerify404 = "https://verify.ceterusinsight.com/login1.php";
    String targetVerify403 =  "https://verify.ceterusinsight.com/admin";
    String targetVerifyHello = "https://verify.ceterusinsight.com/api/hello/RyanTestVerify";
    String targetVerifyLogin = "https://verify.ceterusinsight.com/api/login";
    String targetLiveApiLogin = "https://ceterusinsight.com/api/login";
    String targetLiveHello = "https://ceterusinsight.com/api/hello/RyanTestLive";
    String targetTestHello = "https://test.ceterusinsight.com/api/hello/RyanTestTest";
    String targetVerifyStoreId = "https://verify.ceterusinsight.com/api/store/0121/identity";
    String targetVerifyGraphProfitandLoss = "https://verify.ceterusinsight.com/api/graph/profitandloss/store/0121/2016-06/2016-07";
    String targetVerifyGraphIdRevenue = "https://verify.ceterusinsight.com/api/graph/revenue/store/0121/2016-06/2016-07";
    String targetVerifyGraphIdEbitda = "https://verify.ceterusinsight.com/api/graph/ebitda/store/0121/2016-06/2016-07";
    String targetVerifyGraphIdPersonnel = "https://verify.ceterusinsight.com/api/graph/personnel/store/0121/2016-06/2016-07";
    String targetVerifyGraphIdFacility = "https://verify.ceterusinsight.com/api/graph/facility/store/0121/2016-06/2016-07";
    String targetVerifyGraphIdMarketing = "https://verify.ceterusinsight.com/api/graph/marketing/store/0121/2016-06/2016-07";
    String targetVerifyGraphIdGeneralExpenses = "https://verify.ceterusinsight.com/api/graph/general/store/0121/2016-06/2016-07";
    String targetVerifyUserIdStores = "https://verify.ceterusinsight.com/api/user/348/stores";
    String targetVerifyUserIdIdentity = "https://verify.ceterusinsight.com/api/user/348/identity";
    String targetVerifyReportUserIdCashSummary = "https://verify.ceterusinsight.com/api/report/cash/user/348/stores/summary/2016-06-15";
    String targetVerifyReportUserIdSalesSummary = "https://verify.ceterusinsight.com/api/report/sales/user/348/stores/summary/2016-06-15";
    String targetVerifyReportUserIdStoreIdCashSummary = "https://verify.ceterusinsight.com/api/report/cash/user/348/store/0121/summary/2016-06-15";
    String targetVerifyReportUserIdStoreIdSalesSummary = "https://verify.ceterusinsight.com/api/report/sales/user/348/store/0121/summary/2016-06-15";

    //TODO Write connection to DB to insert data values for testing trial_balance_items

    public RequestSpecification getToken(){
        //Send hash map with login creds.
        Map<String, String> emailPass = new HashMap<String, String>();
        emailPass.put("email", "ryanc@ceterus.com");
        emailPass.put("password", "rR19006766");
        //Format login creds to JSON and attempt to login
        Response tokenResponse =

                given()
                        .relaxedHTTPSValidation()
                        .contentType("application/json")
                        .body(emailPass)
                        .when().post(targetVerifyLogin).then().log().all()
                        .statusCode(200).extract().response();
        //Parse response and get JSON Web Token
        String token = tokenResponse.getBody().jsonPath().getString("token");
        //Build header with JSON Web Token
        RequestSpecBuilder builder = new RequestSpecBuilder();
        builder.addHeader("Authorization", "Bearer " + token);
        RequestSpecification requestSpec = builder.build();

        RequestSpecification retVal = requestSpec;
        //Return the token value
        return retVal;
    }


    @Test
    public void getVerifyReportUserIdStoresIdSales(){

        //Make target API call with new header containing JSON Web Token
        given()
                .relaxedHTTPSValidation()
                .spec(getToken())
                .when()
                .get(targetVerifyReportUserIdStoreIdSalesSummary)
                .then().log().all().statusCode(206);
    }

    @Test
    public void getVerifyReportUserIdStoreIdCash(){

        //Make target API call with new header containing JSON Web Token
        given()
                .relaxedHTTPSValidation()
                .spec(getToken())
                .when()
                .get(targetVerifyReportUserIdStoreIdCashSummary)
                .then().log().all().statusCode(206);
    }

    @Test
    public void getVerifyReportUserIdSales(){

        //Make target API call with new header containing JSON Web Token
        given()
                .relaxedHTTPSValidation()
                .spec(getToken())
                .when()
                .get(targetVerifyReportUserIdSalesSummary)
                .then().log().all().statusCode(206);
    }

    @Test
    public void getVerifyReportUserIdCash(){

        //Make target API call with new header containing JSON Web Token
        given()
                .relaxedHTTPSValidation()
                .spec(getToken())
                .when()
                .get(targetVerifyReportUserIdCashSummary)
                .then().log().all().statusCode(206);
    }

    @Test
    public void getVerifyUserIdIdentity(){

        //Make target API call with new header containing JSON Web Token
        given()
                .relaxedHTTPSValidation()
                .spec(getToken())
                .when()
                .get(targetVerifyUserIdIdentity)
                .then().log().all().statusCode(200);
    }

    @Test
    public void getVerifyUserIdStores(){

        //Make target API call with new header containing JSON Web Token
        given()
                .relaxedHTTPSValidation()
                .spec(getToken())
                .when()
                .get(targetVerifyUserIdStores)
                .then().log().all().statusCode(200);
    }

    @Test
    public void getVerifyGraphIdGeneralExpenses(){

        //Make target API call with new header containing JSON Web Token
        given()
                .relaxedHTTPSValidation()
                .spec(getToken())
                .when()
                .get(targetVerifyGraphIdGeneralExpenses)
                .then().log().all().statusCode(200);
    }

    @Test
    public void getVerifyGraphIdMarketing(){

        //Make target API call with new header containing JSON Web Token
        given()
                .relaxedHTTPSValidation()
                .spec(getToken())
                .when()
                .get(targetVerifyGraphIdMarketing)
                .then().log().all().statusCode(200);
    }

    @Test
    public void getVerifyGraphIdFacility(){

        //Make target API call with new header containing JSON Web Token
        given()
                .relaxedHTTPSValidation()
                .spec(getToken())
                .when()
                .get(targetVerifyGraphIdFacility)
                .then().log().all().statusCode(200);
    }

    @Test
    public void setTargetVerifyGraphIdPersonnel(){

        //Make target API call with new header containing JSON Web Token
        given()
                .relaxedHTTPSValidation()
                .spec(getToken())
                .when()
                .get(targetVerifyGraphIdPersonnel)
                .then().log().all().statusCode(200);
    }

    @Test
    public void getVerifyGraphIdEbitda(){

        //Make target API call with new header containing JSON Web Token
        given()
                .relaxedHTTPSValidation()
                .spec(getToken())
                .when()
                .get(targetVerifyGraphIdEbitda)
                .then().log().all().statusCode(200);
    }

    @Test
    public void getVerifyGraphIdRevenue(){

        //Make target API call with new header containing JSON Web Token
        given()
                .relaxedHTTPSValidation()
                .spec(getToken())
                .when()
                .get(targetVerifyGraphIdRevenue)
                .then().log().all().statusCode(200);
    }

    @Test
    public void getVerifyGraphProfitandLoss(){

        //Make target API call with new header containing JSON Web Token
        given()
                .relaxedHTTPSValidation()
                .spec(getToken())
                .when()
                .get(targetVerifyGraphProfitandLoss)
                .then().log().all().statusCode(200);
    }

    @Test
    public void getVerifyStoreIdWithToken() {

        //Make API call with new header containing JSON Web Token
        given()
                .relaxedHTTPSValidation()
                .spec(getToken())
                .when()
                .get(targetVerifyStoreId)
                .then().log().all().statusCode(200);
    }

    @Test
    public void loginVerify401(){
        Map<String, String> emailPass = new HashMap<String, String>();
        emailPass.put("email", "ryan@ceterus.com");
        emailPass.put("password", "rR19006766");

        given()
                .relaxedHTTPSValidation()
                .contentType("application/json")
                .body(emailPass)
                .when().post(targetVerifyLogin).then()
                .statusCode(401);
    }

    @Test
    public void loginVerify(){
        Map<String, String> emailPass = new HashMap<String, String>();
        emailPass.put("email", "ryanc@ceterus.com");
        emailPass.put("password", "rR19006766");

        given()
                .relaxedHTTPSValidation()
                .contentType("application/json")
                .body(emailPass)
                .when().post(targetVerifyLogin).then().log().all()
                .statusCode(200);
    }

    @Test
    public void helloVerify(){
        given().relaxedHTTPSValidation().when().get(targetVerifyHello).then().log().all()
                .statusCode(200);
    }

    @Test
    public void helloLive(){
        given().relaxedHTTPSValidation().when().get(targetLiveHello).then().log().all()
                .statusCode(200);
    }

    @Test
    public void pingVerifyTest(){
        //.log().all() to turn on logging
        given().relaxedHTTPSValidation().when().get(targetVerify200).then()
                .statusCode(200);

    }

    @Test
    public void invalidLoginPath(){
        given().relaxedHTTPSValidation().when().get(targetVerify404).then().statusCode(404);
    }

    @Test
    public void confirmLoginPage(){
        given().relaxedHTTPSValidation().get(targetVerify200).then()
                .body(containsString("2016  Ceterus. All rights reserved"))
                .statusCode(200);
    }

    @Test
    public void confirmForbidden(){
        given().relaxedHTTPSValidation().when()
                .get(targetVerify403).then().statusCode(403);
    }

    @Test
    public void methodNotAllowed(){
        given().relaxedHTTPSValidation().get(targetLiveApiLogin).then().log().all()
                .body(containsString("Method not allowed. Must be one of: "));
    }
}
